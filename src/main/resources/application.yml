server:
  port: 9990
  shutdown: graceful

debug: false

logging:
  level:
    root: INFO
    org:
      springframework:
        security: INFO
      mongodb:
        driver: INFO
      postgresql:
        Driver: INFO
        jdbc: INFO
      apache:
        catalina: INFO
    com:
      zaxxer:
        hikari: INFO

app:
  cors:
    allowed-origins:
  config:
    connectifysvc: "http://localhost:9991"
    projectmgmtsvc: ""
    paymentsvc: ""
    raskengine: ""
    pythonexecutorsvc: ""

spring:
#  kafka:
#    producer:
#      event-topic: event-data
#      bootstrap-servers: b-2.kafkadev.kb60te.c2.kafka.ap-south-1.amazonaws.com:9092
#  redis:
#    host: ${REDIS_HOST}
#    port: 6379
#    password: ${REDIS_PASSWORD}
  profiles:
    active: ${SPRING_PROFILE_ACTIVE}
#  servlet:
#    multipart:
#      max-file-size: 5MB
#      max-request-size: 5MB
#  security:
#    user:
#      name: local
#      password: local
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: ${GOOGLE_CLIENT_ID}
#            client-secret: ${GOOGLE_CLIENT_SECRET}
#            scope: openid,profile,email
#            authorization-grant-type: authorization_code
#            redirect-uri: "http://localhost:3000"
#      resourceserver:
#        jwt:
#          issuer-uri: accounts.google.com
#          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
#      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#  data:
#    mongodb:
#      host: ${MONGODB_HOST}
#      port: 27017
#      username: ${MONGODB_USERNAME}
#      password: ${MONGODB_PASSWORD}
#      database: ${MONGODB_DATABASE}
  #      authentication-database: admin

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${PG_HOST}:5432/testdb
    username: ${PG_USERNAME}
    password: ${PG_PASSWORD}


management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      enabled: true
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  server:
    port: 8010
#
#mongo:
#  host: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}:27017/${MONGODB_DATABASE}
#  database: ${MONGODB_DATABASE}

eLabs:
  sms:
    url: "https://2factor.in"
    token: "ef1674ab-4e49-11eb-8153-0200cd936042"

aws:
  accessKey: ${AWS_ACCESS_KEY_ID}
  secretKey: ${AWS_SECRET_KEY}
  bucket:
    category-image: video-evidence-dev

open_ai_key: ${OPEN_API_KEY}